[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 18.0.2.1)
[debug]       Load.loadUnit: plugins took 317.468ms
[debug]       Load.loadUnit: defsScala took 0.5588ms
[debug] [Loading] Scanning directory C:\Users\abhishek.kumar32\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\abhishek.kumar32\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 61.1313 ms
[debug]           Load.resolveProject(global-plugins) took 129.618ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\abhishek.kumar32\.sbt\1.0\plugins, plugins: List(<none>))) took 251.1837ms
[debug] [Loading] Done in C:\Users\abhishek.kumar32\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 326.0536ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.7053ms
[debug]     Load.loadUnit(file:/C:/Users/abhishek.kumar32/.sbt/1.0/plugins/, ...) took 672.9883ms
[debug]   Load.apply: load took 1157.1661ms
[debug]   Load.apply: resolveProjects took 27.7342ms
[debug]   Load.apply: finalTransforms took 140.9029ms
[debug]   Load.apply: config.delegates took 21.4919ms
[debug]   Load.apply: Def.make(settings)... took 898.5455ms
[debug]   Load.apply: structureIndex took 196.7335ms
[debug]   Load.apply: mkStreams took 2.0751ms
[info] loading global plugins from C:\Users\abhishek.kumar32\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5278.3007ms
[debug]           Load.loadUnit: plugins took 65.5825ms
[debug]           Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.8155 ms
[debug]               Load.resolveProject(humiditysensordata-build) took 2.8643ms
[debug]             Load.loadTransitive: finalizeProject(Project(id humiditysensordata-build, base: D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project, plugins: List(<none>))) took 8.7958ms
[debug] [Loading] Done in D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project, returning: (humiditysensordata-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13.1515ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0191ms
[debug]         Load.loadUnit(file:/D:/Abhishek/SkillUp/SparkScalaCourse/humiditySensorData/project/, ...) took 80.4725ms
[debug]       Load.apply: load took 83.4258ms
[debug]       Load.apply: resolveProjects took 0.2804ms
[debug]       Load.apply: finalTransforms took 26.3853ms
[debug]       Load.apply: config.delegates took 0.8773ms
[debug]       Load.apply: Def.make(settings)... took 189.7665ms
[debug]       Load.apply: structureIndex took 85.8781ms
[debug]       Load.apply: mkStreams took 0.015ms
[info] loading project definition from D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 920.7848ms
[debug]     Load.loadUnit: defsScala took 0.008ms
[debug] [Loading] Scanning directory D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData
[debug]       Load.loadUnit: mkEval took 10.9891ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.481 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 6.1727ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData, plugins: List(<none>))) took 12.2735ms
[debug] [Loading] Done in D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 461.982ms
[debug]     Load.loadUnit: cleanEvalClasses took 83.9452ms
[debug]   Load.loadUnit(file:/D:/Abhishek/SkillUp/SparkScalaCourse/humiditySensorData/, ...) took 1469.2843ms
[debug] Load.apply: load took 1472.7943ms
[debug] Load.apply: resolveProjects took 0.2338ms
[debug] Load.apply: finalTransforms took 19.0361ms
[debug] Load.apply: config.delegates took 0.6303ms
[debug] Load.apply: Def.make(settings)... took 128.9695ms
[debug] Load.apply: structureIndex took 58.7641ms
[debug] Load.apply: mkStreams took 0.0052ms
[info] set current project to humiditySensorData (in build file:/D:/Abhishek/SkillUp/SparkScalaCourse/humiditySensorData/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-34b83a6f2b587abce1ed
[debug] Writing bsp connection file
[info] started sbt server
