[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 18.0.2.1)
[debug]       Load.loadUnit: plugins took 272.2924ms
[debug]       Load.loadUnit: defsScala took 0.5703ms
[debug] [Loading] Scanning directory C:\Users\abhishek.kumar32\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\abhishek.kumar32\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 45.7957 ms
[debug]           Load.resolveProject(global-plugins) took 179.8758ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\abhishek.kumar32\.sbt\1.0\plugins, plugins: List(<none>))) took 290.3712ms
[debug] [Loading] Done in C:\Users\abhishek.kumar32\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 350.6281ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.8806ms
[debug]     Load.loadUnit(file:/C:/Users/abhishek.kumar32/.sbt/1.0/plugins/, ...) took 645.4857ms
[debug]   Load.apply: load took 1200.5356ms
[debug]   Load.apply: resolveProjects took 18.9816ms
[debug]   Load.apply: finalTransforms took 151.9363ms
[debug]   Load.apply: config.delegates took 32.4966ms
[debug]   Load.apply: Def.make(settings)... took 989.5453ms
[debug]   Load.apply: structureIndex took 242.9525ms
[debug]   Load.apply: mkStreams took 2.9806ms
[info] loading global plugins from C:\Users\abhishek.kumar32\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5211.8145ms
[debug]           Load.loadUnit: plugins took 72.6264ms
[debug]           Load.loadUnit: defsScala took 0.0115ms
[debug] [Loading] Scanning directory D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.2622 ms
[debug]               Load.resolveProject(humiditysensordata-build) took 2.3635ms
[debug]             Load.loadTransitive: finalizeProject(Project(id humiditysensordata-build, base: D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project, plugins: List(<none>))) took 8.7368ms
[debug] [Loading] Done in D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project, returning: (humiditysensordata-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 14.2162ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0174ms
[debug]         Load.loadUnit(file:/D:/Abhishek/SkillUp/SparkScalaCourse/humiditySensorData/project/, ...) took 88.7703ms
[debug]       Load.apply: load took 91.1941ms
[debug]       Load.apply: resolveProjects took 0.6163ms
[debug]       Load.apply: finalTransforms took 26.1684ms
[debug]       Load.apply: config.delegates took 1.2019ms
[debug]       Load.apply: Def.make(settings)... took 210.4007ms
[debug]       Load.apply: structureIndex took 65.0213ms
[debug]       Load.apply: mkStreams took 0.0048ms
[info] loading project definition from D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 951.6949ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData
[debug]       Load.loadUnit: mkEval took 12.9663ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.8593 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 5.7626ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData, plugins: List(<none>))) took 13.6075ms
[debug] [Loading] Done in D:\Abhishek\SkillUp\SparkScalaCourse\humiditySensorData, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4527.8289ms
[debug]     Load.loadUnit: cleanEvalClasses took 103.4215ms
[debug]   Load.loadUnit(file:/D:/Abhishek/SkillUp/SparkScalaCourse/humiditySensorData/, ...) took 5585.4228ms
[debug] Load.apply: load took 5588.269ms
[debug] Load.apply: resolveProjects took 0.3176ms
[debug] Load.apply: finalTransforms took 39.4149ms
[debug] Load.apply: config.delegates took 1.6141ms
[debug] Load.apply: Def.make(settings)... took 156.2873ms
[debug] Load.apply: structureIndex took 82.5415ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to humiditySensorData (in build file:/D:/Abhishek/SkillUp/SparkScalaCourse/humiditySensorData/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-34b83a6f2b587abce1ed
[debug] Writing bsp connection file
[info] started sbt server
